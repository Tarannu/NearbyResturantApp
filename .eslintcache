[{"/Users/prakash/Repositories/NearbyResturantApp/src/index.js":"1","/Users/prakash/Repositories/NearbyResturantApp/src/reportWebVitals.js":"2","/Users/prakash/Repositories/NearbyResturantApp/src/App.js":"3","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Home/Home.js":"4","/Users/prakash/Repositories/NearbyResturantApp/src/components/Nav/Nav.js":"5","/Users/prakash/Repositories/NearbyResturantApp/src/components/Footer/Footer.js":"6","/Users/prakash/Repositories/NearbyResturantApp/src/components/About/About.js":"7","/Users/prakash/Repositories/NearbyResturantApp/src/components/Register/Register.js":"8","/Users/prakash/Repositories/NearbyResturantApp/src/axios.js":"9","/Users/prakash/Repositories/NearbyResturantApp/src/components/Login/Login.js":"10","/Users/prakash/Repositories/NearbyResturantApp/src/components/Input/Input.js":"11","/Users/prakash/Repositories/NearbyResturantApp/src/components/Button/Button.js":"12","/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato.js":"13","/Users/prakash/Repositories/NearbyResturantApp/src/components/Spinner/Spinner.js":"14","/Users/prakash/Repositories/NearbyResturantApp/src/components/SearchBar/SearchBar.js":"15","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Search/Search.js":"16","/Users/prakash/Repositories/NearbyResturantApp/src/components/Restaurant/Restaurant.js":"17","/Users/prakash/Repositories/NearbyResturantApp/src/components/ResDetails/ResDetails.js":"18","/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato_menu.js":"19","/Users/prakash/Repositories/NearbyResturantApp/src/components/MenuItem/MenuItem.js":"20","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Menu/RestaurantMenu.js":"21","/Users/prakash/Repositories/NearbyResturantApp/src/components/Feedback/Feedback.js":"22"},{"size":607,"mtime":1611623643725,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1611447511345,"results":"25","hashOfConfig":"24"},{"size":1077,"mtime":1612226491788,"results":"26","hashOfConfig":"24"},{"size":465,"mtime":1612155407589,"results":"27","hashOfConfig":"24"},{"size":500,"mtime":1611905445663,"results":"28","hashOfConfig":"24"},{"size":801,"mtime":1612155407583,"results":"29","hashOfConfig":"24"},{"size":391,"mtime":1612155407581,"results":"30","hashOfConfig":"24"},{"size":7564,"mtime":1612155407585,"results":"31","hashOfConfig":"24"},{"size":161,"mtime":1611623643720,"results":"32","hashOfConfig":"24"},{"size":8018,"mtime":1612155407584,"results":"33","hashOfConfig":"24"},{"size":1721,"mtime":1611727900008,"results":"34","hashOfConfig":"24"},{"size":254,"mtime":1611722564239,"results":"35","hashOfConfig":"24"},{"size":219,"mtime":1612155407588,"results":"36","hashOfConfig":"24"},{"size":169,"mtime":1611895773563,"results":"37","hashOfConfig":"24"},{"size":847,"mtime":1612155407587,"results":"38","hashOfConfig":"24"},{"size":3222,"mtime":1612159954879,"results":"39","hashOfConfig":"24"},{"size":1644,"mtime":1612156184741,"results":"40","hashOfConfig":"24"},{"size":1516,"mtime":1612155407586,"results":"41","hashOfConfig":"24"},{"size":185,"mtime":1612160137262,"results":"42","hashOfConfig":"24"},{"size":435,"mtime":1612225990992,"results":"43","hashOfConfig":"24"},{"size":2743,"mtime":1612228565721,"results":"44","hashOfConfig":"24"},{"size":767,"mtime":1612228062115,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"wftz3s",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/prakash/Repositories/NearbyResturantApp/src/index.js",[],["96","97"],"/Users/prakash/Repositories/NearbyResturantApp/src/reportWebVitals.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/App.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/containers/Home/Home.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Nav/Nav.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Footer/Footer.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/About/About.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Register/Register.js",["98","99","100"],"import React, {useEffect, useState} from 'react';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport Spinner from '../Spinner/Spinner';\nimport axios from '../../axios';\nimport './Register.css';\n\nconst Register = (props) => {\n    const [formData, setFormData] = useState({\n        dataFields: {\n            firstName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your first name',\n                    label: 'First Name'\n                },\n                value: '',\n                validationRules: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            lastName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your last name',\n                    label: 'Last Name'\n                },\n                value: '',\n                validationRules: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Enter email',\n                    label: 'Email',\n                },\n                value: '',\n                validationRules:{\n                    required: true,\n                    validString: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Enter password',\n                    label: 'Password',\n                },\n                value: '',\n                secretValue: '',\n                validationRules: {\n                    required: true,\n                    minLength: 8,\n                },\n                valid: false,\n                touched: false,\n            },\n            confirmPassword: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Re-enter password',\n                    label: 'Confirm Password',\n                },\n                value: '',\n                secretValue: '',\n                validationRules: {\n                    required: true,\n                    mustMatch: true,\n                },\n                valid: false,\n                touched: false,\n            },\n        },\n        isFormValid: false,\n    });\n    const[validationError, setValidationError] = useState(''); \n    const [authenticated, setAuthenticated] = useState(false);\n    const [userAlreadyExists, setUserAlreadyExists] = useState(false);\n\n    // using useEffect hook to register users to the database\n\n    // validate the input\n    const validated = ( value, rules ) => {\n        let isValid = true;\n        if(rules && rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.validString){\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/;\n            isValid = re.test(String(value).toLowerCase());\n        }\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength;\n        }\n\n        if(rules.mustMatch){\n            isValid = value === formData.dataFields.password.value;\n        }\n        return isValid;\n    }\n\n    // handle signUp button\n    const signUpButtonHandler = async (event) => {\n        setValidationError('');\n        const user = {\n            username: formData.dataFields.email.value,\n            password: formData.dataFields.password.value,\n            firstName: formData.dataFields.firstName.value,\n            lastName: formData.dataFields.lastName.value,\n            email: formData.dataFields.email.value,\n        }\n\n        // either sign user up or generate error message\n        if(formData.isFormValid){\n            axios.get(`/users.json`)\n                .then(response => {\n                    let alreadySignedUp = false;\n                    for(let key in response.data){\n                        if(response.data[key].username === user.username){\n                            alreadySignedUp = true;\n                        }\n                    }\n                    if(alreadySignedUp === false){\n                        axios.post('/users.json', user)\n                        .then(response => {\n                            console.log(response);\n                        });\n                    } else{\n                        setUserAlreadyExists(true);\n                        setValidationError('User already exists. Cannot register.');\n                    }\n                })\n        } else{\n            setValidationError('Please, complete the form to sign up.');\n        }\n        event.preventDefault();\n    }\n\n    // handle input\n    const inputChangeHandler = (event, field) => {\n        const updatedDataFields = {...formData.dataFields};\n        const updatedField = {...updatedDataFields[field]};\n        updatedField.value = event.target.value;\n\n        // validate entered values\n        updatedField.valid = validated(updatedField.value, updatedField.validationRules);\n        updatedField.touched = true;\n        updatedDataFields[field] = updatedField;\n\n        let formDataIsValid = true;\n        for(let field in updatedDataFields){\n            formDataIsValid = updatedDataFields[field].valid && formDataIsValid;\n        }\n        setFormData({dataFields: updatedDataFields, isFormValid: formDataIsValid});\n    }\n\n    const redirectToLoginPage = () => {\n        props.history.goBack();\n    }\n\n\n    const dataFieldsArray = [];\n    for(let key in formData.dataFields){\n        dataFieldsArray.push({\n            id: key,\n            config: formData.dataFields[key],\n        });\n    }\n\n    let form = \n        <form onSubmit={(event)=>signUpButtonHandler(event)}>\n            {dataFieldsArray.map(formElement => {\n                return(\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        touched={formElement.config.touched}\n                        valueType={formElement.id.includes('Name') ? (formElement.id.substring(0, formElement.id.length-4) + ' ' +  formElement.id.substring(formElement.id.length-4).toLowerCase()) : formElement.id}\n                        changed={(event) => inputChangeHandler(event, formElement.id)}\n                    />\n                )\n            })}\n            <Button>Sign Up</Button>\n        </form>\n    return (\n        <div className=\"Register\">\n            <p className=\"RegisterTitle\">Register for more actions and easy checkouts</p>\n            <div className=\"RegisterPage\">\n                {form}\n                <p className=\"ValidationError\">{validationError}</p>\n                {userAlreadyExists ? <div><p>Want to log in?</p><Button clicked={redirectToLoginPage}>Login</Button></div>: null}\n             </div>\n        </div>\n        \n    )\n}\n\nexport default Register;","/Users/prakash/Repositories/NearbyResturantApp/src/axios.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Login/Login.js",["101","102","103"],"import React, {useState} from 'react';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport Spinner from '../../components/Spinner/Spinner';\nimport axios from '../../axios';\nimport './Login.css';\n\nconst Login = (props) => {\n\n    // useState hooks \n    const [formData, setFormData] = useState({\n        dataFields: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Enter email',\n                    label: 'Email',\n                },\n                value: '',\n                validationRules:{\n                    required: true,\n                    validString: true,\n                    mustHaveBeenRegistered: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Enter password',\n                    label: 'Password',\n                },\n                value: '',\n                validationRules: {\n                    required: true,\n                    mustMatch: true,\n                },\n                valid: false,\n                touched: false,\n            }\n        },\n        validDataEntered: false,\n    });\n    const [validationError, setValidationError] = useState('');\n    const [authenticated, setAuthenticated] = useState(false);\n    const [loading, setLoading] = useState(false);\n    // Hackerrank api problem solved.\n    const getTotalGoals = async (year, team) => {\n        const BaseURL = 'https://jsonmock.hackerrank.com/api/football_matches';\n        const resJson = await fetch(`${BaseURL}?year=${year}&team1=${team}`);\n        const res = await resJson.json();\n        // console.log(res.total_pages);\n        let totalGoals = 0;\n        for(let i=1;i<=res.total_pages;i++){\n            const responseJson = await fetch(`${BaseURL}?year=${year}&team1=${team}&page=${i}`);\n            const response = await responseJson.json();\n            for(let j=0;j<response.data.length;j++){\n                // console.log(parseInt(response.data[j]['team1goals']));\n                totalGoals += parseInt(response.data[j]['team1goals']);\n            }\n        }\n        \n        for(let i=1;i<=res.total_pages;i++){\n            const responseJson = await fetch(`${BaseURL}?year=${year}&team2=${team}&page=${i}`);\n            const response = await responseJson.json();\n            for(let j=0;j<response.data.length;j++){\n                // console.log(parseInt(response.data[j]['team1goals']));\n                totalGoals += parseInt(response.data[j]['team2goals']);\n            }\n        }\n\n        // const Http = new XMLHttpRequest();\n        // const url = `${BaseURL}?year=${year}&team1=${team}&page=1`;\n        // Http.open(\"GET\", url);\n        // Http.send();\n        // Http.onreadystatechange = (e) => {\n        //     console.log(Http.response);\n        // }\n    }\n\n    // validate the input\n    const validated = ( value, rules ) => {\n        let isValid = true;\n        if(rules && rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.validString){\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/;\n            isValid = re.test(String(value).toLowerCase());\n        }\n        return isValid;\n    }\n\n    const continueAsGuest = () => {\n        props.history.push('/search-and-result')\n    }\n\n    // handle input\n    const inputChangeHandler = (event, inputIdentifier) => {\n        const updatedDataFields = {...formData.dataFields};\n        const updatedField= {...updatedDataFields[inputIdentifier]};\n        updatedField.value = event.target.value;\n\n        updatedField.valid = validated(updatedField.value, updatedField.validationRules);\n        updatedField.touched = true;\n        updatedDataFields[inputIdentifier] = updatedField;\n\n        let formDataIsValid = true;\n        for(let inputIdentifier in updatedDataFields){\n            formDataIsValid = updatedDataFields[inputIdentifier].valid && formDataIsValid;\n        }\n        setFormData({dataFields: updatedDataFields, validDataEntered: formDataIsValid});\n    }\n\n    // handle Login button click\n    const loginButtonHandler = async (event) => {\n        event.preventDefault();\n        if(formData.dataFields.email.value === \"\" && formData.dataFields.password.value === \"\"){\n            setValidationError(\"Please, enter username/passoword to log in.\");\n        } else{\n            if(formData.validDataEntered){\n                setLoading(true);\n                //const userJson = await fetch(`https://restaurant-app-users-default-rtdb.firebaseio.com/users.json`);\n                //const user = await userJson.json();\n                const users = await axios.get(`/users.json`);\n                const userArray = [];\n                for(let key in users.data){\n                    userArray.push([users.data[key]]);\n                }\n                let validUser = false;\n                for(let i=0;i<userArray.length;i++){\n                    if((userArray[i][0].username === formData.dataFields.email.value) && \n                        (userArray[i][0].password === formData.dataFields.password.value)){\n                            validUser = true;\n                        }\n                }\n                \n                if(validUser){\n                    setAuthenticated(true);\n                    props.history.push('/search-and-result')\n                } else {\n                    setValidationError(\"Email/password was wrong.\");\n                    setLoading(false);;\n                }\n\n            }\n        }\n\n        // This is for the api problem on Hackerrank\n        //getTotalGoals(2011, 'Ac Milan');\n\n    }\n\n    // handler Register button click\n    const registerClickHandler = () => {\n        console.log('inside register component')\n        props.history.push('/register');\n    };\n\n    const dataFieldsArray = [];\n    for(let key in formData.dataFields){\n        dataFieldsArray.push({\n            id: key,\n            config: formData.dataFields[key]\n        });\n    }\n\n\n    let form =  ( \n        <form className=\"Form\" onSubmit = {(event) => loginButtonHandler(event)}>\n            {dataFieldsArray.map(formElement => {\n                return(\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        touched={formElement.config.touched}\n                        valueType={formElement.id}\n                        changed={(event) => inputChangeHandler(event, formElement.id)}\n                    />\n                )\n            })}\n            <Button>Login</Button>\n            <p className=\"LoginValidationError\">{validationError}</p>\n        </form>\n    )\n    \n    // return statement\n    return (\n        <>\n        {loading ? <Spinner /> : (\n            <>\n                <div className=\"Login\">\n                    <p className=\"LoginText\">Login</p>\n                    {form}\n                    <div className=\"NotRegistered\">\n                        <p className=\"RegisterText\">Not Registered Yet?</p>\n                        <p \n                            className=\"RegisterText\"\n                            onClick={registerClickHandler}>Register</p>\n                    </div>\n                </div>\n                <p \n                    className=\"Guest\" \n                    onClick={continueAsGuest}>Continue as guest\n                </p>\n            </>\n            )}\n        </>\n    )\n}\n\nexport default Login;","/Users/prakash/Repositories/NearbyResturantApp/src/components/Input/Input.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Button/Button.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Spinner/Spinner.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/SearchBar/SearchBar.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/containers/Search/Search.js",["104","105","106","107"],"import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\nimport Restaurant from \"../../components/Restaurant/Restaurant\";\nimport zomato from \"../../api/zomato\";\nimport ResDetails from \"../../components/ResDetails/ResDetails\";\nimport './Search.css';\n\nconst Search = (props) => {\n  const [food, setFood] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const options = [{ label: \"---None---\", value: \"\" }, { label: \"Sort by review\", value: \"by review\" }];\n  const [sortBy, setSortBy] = useState(\"\");\n\n  const handleLocationChange = (e) => {\n    setLocation(e.target.value);\n  };\n  const handleFoodChange = (e) => {\n    setFood(e.target.value);\n  };\n\n  const searchFunc = async (loc, fd, sort) => {\n    try {\n      //location key is extracted from this api\n      const city_response = await zomato.get(`/locations?query=${loc}`);\n      const city_id = JSON.stringify(\n        city_response.data.location_suggestions[0].entity_id\n      );\n\n      //sort logic will be here\n      var getURL = \"\";\n      if (sortBy == \"by review\") {\n        getURL = `/search?entity_id=${city_id}&entity_type=city&q=${fd}&sort=rating&order=desc`;\n      } else getURL = `/search?entity_id=${city_id}&entity_type=city&q=${fd}`;\n      //this api get the food type\n      const food_response = await zomato.get(getURL);\n      \n      const items = food_response.data.restaurants;\n      if (items.length) {\n        setResults(items);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  useEffect(() => {\n    searchFunc(location, food, sortBy);\n  }, [location, food, sortBy]);\n  \n  const handleSubmit = (e) => {\n    console.log(\"It will take max 15 minutes to load otherwise please refresh\");\n    e.preventDefault();\n    searchFunc(location, food, sortBy);\n  };\n  const handleSearchButton = (e) => {};\n\n  let restaurants = null;\n  if(results.length > 0){\n    restaurants = results.map(restaurant => {\n  \n      return (\n        <Restaurant\n          key={restaurant.restaurant.id}\n          id={restaurant.restaurant.id}\n          restaurantName={restaurant.restaurant.name}\n          restaurantAddress={restaurant.restaurant.location.address}\n          thumbnail={restaurant.restaurant.thumb}\n          rating={restaurant.restaurant.user_rating}\n       />\n      )\n    });\n\n  }\n\n  const handleSort = (value) => {\n    setSortBy(value);\n    console.log(sortBy);\n    searchFunc(food,location,sortBy);\n  };\n \n  return (\n    <div style={{ padding: 50 }}>\n      <SearchBar\n        location={location}\n        onLocationChange={handleLocationChange}\n        onFoodChange={handleFoodChange}\n        handleSearchButton={handleSearchButton}\n      />\n      <div>\n        <select \n          className=\"SortBy\"\n          onChange={handleSort}\n        >\n          {options.map(option =>{\n            return <option {...option}></option>\n          })}\n        </select>\n      </div>\n       {results.length > 0 ? <p className=\"SearchResults\">Search Results</p> : null}\n       {restaurants}\n       {/* {results.length > 0 ? <Restaurant results={results} onSortChanged={handleSort}/>: null} */}\n    </div>\n  );\n};\n\nexport default Search;","/Users/prakash/Repositories/NearbyResturantApp/src/components/Restaurant/Restaurant.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/ResDetails/ResDetails.js",["108"],"import React,{useState,useEffect}  from 'react';\nimport './ResDetail.css';\nimport zomato from '../../api/zomato'\n\nconst ResDetails = ({match}) => {\n    const [results, setResults] = useState([]);\n    console.log(\"Inside ResDetails\");\n  const detailsFunc = async () => {\n    try {\n      //location key is extracted from this api\n      const res = await zomato.get(`/restaurant?res_id=${match.params.id}`);\n      const details = res.data;\n      console.log(\"Detail IS :  \", details);\n      if (details) {\n        setResults(details);\n      }\n      const menu = await zomato.get(`/dailymenu?res_id=${match.params.id}`);\n      const menuDetails = menu.data;\n      console.log(\"Menu IS :  \", menuDetails);\n      if (menuDetails) {\n        setResults(menuDetails);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    detailsFunc();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"res-div\">\n        <h2>{results.name}</h2>\n        <div className=\"res-details\">\n        <p>They serve cuisines {results.cuisines}</p>\n        <p >\n          Open Through {results.timings}\n        </p>\n        <p>Located at</p>\n        <p>Contact {results.phone_numbers} </p>\n        </div>\n      </div>\n\n      <div className=\"order-selection\">\n        <h2>Their daily menu is given for you to select for order</h2>\n        <ul>\n          <li>Cheese Burger</li>\n          <li>Ham Burger</li>\n        </ul>\n        <button>Place Order</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ResDetails;\n","/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato_menu.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/MenuItem/MenuItem.js",["109"],"import React, { useState } from 'react';\nimport './MenuItem.css';\n\nconst MenuItem = (props) => {\n\n    return (\n        <div className=\"MenuItem\">\n            <p className=\"ItemName\">{props.name}</p>\n            <p className=\"ItemPrice\">Price: {props.price}</p>\n            <button \n                className=\"AddToCartButton\"\n                onClick={props.clicked}>Add to Cart</button>\n        </div>\n    )\n}\n\nexport default MenuItem;","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Menu/RestaurantMenu.js",["110"],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Feedback/Feedback.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"119","line":90,"column":12,"nodeType":"117","messageId":"118","endLine":90,"endColumn":25},{"ruleId":"115","severity":1,"message":"120","line":90,"column":27,"nodeType":"117","messageId":"118","endLine":90,"endColumn":43},{"ruleId":"115","severity":1,"message":"119","line":48,"column":12,"nodeType":"117","messageId":"118","endLine":48,"endColumn":25},{"ruleId":"115","severity":1,"message":"121","line":51,"column":11,"nodeType":"117","messageId":"118","endLine":51,"endColumn":24},{"ruleId":"115","severity":1,"message":"122","line":71,"column":17,"nodeType":"117","messageId":"118","endLine":71,"endColumn":27},{"ruleId":"115","severity":1,"message":"123","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":32,"column":18,"nodeType":"126","messageId":"127","endLine":32,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":49,"column":6,"nodeType":"130","endLine":49,"endColumn":30,"suggestions":"131"},{"ruleId":"115","severity":1,"message":"132","line":51,"column":9,"nodeType":"117","messageId":"118","endLine":51,"endColumn":21},{"ruleId":"128","severity":1,"message":"133","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":8,"suggestions":"134"},{"ruleId":"115","severity":1,"message":"135","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"120","line":14,"column":23,"nodeType":"117","messageId":"118","endLine":14,"endColumn":39},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'authenticated' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","'getTotalGoals' is assigned a value but never used.","'totalGoals' is assigned a value but never used.","'ResDetails' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchFunc'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'handleSubmit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'detailsFunc'. Either include it or remove the dependency array.",["139"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [location, food, sortBy, searchFunc]",{"range":"144","text":"145"},"Update the dependencies array to be: [detailsFunc]",{"range":"146","text":"147"},[1654,1678],"[location, food, sortBy, searchFunc]",[866,868],"[detailsFunc]"]