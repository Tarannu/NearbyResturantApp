[{"/Users/prakash/Repositories/NearbyResturantApp/src/index.js":"1","/Users/prakash/Repositories/NearbyResturantApp/src/reportWebVitals.js":"2","/Users/prakash/Repositories/NearbyResturantApp/src/App.js":"3","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Home/Home.js":"4","/Users/prakash/Repositories/NearbyResturantApp/src/components/Nav/Nav.js":"5","/Users/prakash/Repositories/NearbyResturantApp/src/components/Footer/Footer.js":"6","/Users/prakash/Repositories/NearbyResturantApp/src/components/About/About.js":"7","/Users/prakash/Repositories/NearbyResturantApp/src/components/Register/Register.js":"8","/Users/prakash/Repositories/NearbyResturantApp/src/axios.js":"9","/Users/prakash/Repositories/NearbyResturantApp/src/components/Login/Login.js":"10","/Users/prakash/Repositories/NearbyResturantApp/src/components/Input/Input.js":"11","/Users/prakash/Repositories/NearbyResturantApp/src/components/Button/Button.js":"12"},{"size":607,"mtime":1611448670616,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611447511345,"results":"15","hashOfConfig":"14"},{"size":701,"mtime":1611448644250,"results":"16","hashOfConfig":"14"},{"size":436,"mtime":1611448131460,"results":"17","hashOfConfig":"14"},{"size":496,"mtime":1611448131471,"results":"18","hashOfConfig":"14"},{"size":310,"mtime":1611448131464,"results":"19","hashOfConfig":"14"},{"size":421,"mtime":1611449409653,"results":"20","hashOfConfig":"14"},{"size":7149,"mtime":1611457104354,"results":"21","hashOfConfig":"14"},{"size":161,"mtime":1611447721076,"results":"22","hashOfConfig":"14"},{"size":5030,"mtime":1611454136533,"results":"23","hashOfConfig":"14"},{"size":1721,"mtime":1611448131465,"results":"24","hashOfConfig":"14"},{"size":218,"mtime":1611448131469,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wftz3s",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/prakash/Repositories/NearbyResturantApp/src/index.js",[],["52","53"],"/Users/prakash/Repositories/NearbyResturantApp/src/reportWebVitals.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/App.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/containers/Home/Home.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Nav/Nav.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Footer/Footer.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/About/About.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Register/Register.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/axios.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Login/Login.js",["54","55","56"],"import React, {useState} from 'react';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport './Login.css';\n\nconst Login = (props) => {\n\n    // useState hooks \n    const [formData, setFormData] = useState({\n        dataFields: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Enter email',\n                    label: 'Email',\n                },\n                value: '',\n                validationRules:{\n                    required: true,\n                    validString: true,\n                    mustHaveBeenRegistered: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Enter password',\n                    label: 'Password',\n                },\n                value: '',\n                secretValue: '',\n                validationRules: {\n                    required: true,\n                    mustMatch: true,\n                },\n                valid: false,\n                touched: false,\n            }\n        },\n        validDataEntered: false,\n    });\n\n    const [authenticated, setAuthenticated] = useState(false);\n\n    // validate the input\n    const validated = ( value, rules ) => {\n        let isValid = true;\n        if(rules && rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.validString){\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/;\n            isValid = re.test(String(value).toLowerCase());\n        }\n        return isValid;\n    }\n\n    const loginHandler = (event) => {\n        event.preventDefault();\n    }\n\n    // handle input\n    const inputChangeHandler = (event, inputIdentifier) => {\n        const updatedDataFields = {...formData.dataFields};\n        const updatedField= {...updatedDataFields[inputIdentifier]};\n        if(inputIdentifier === 'password'){\n            updatedField.secretValue = event.target.value;\n            let encryptedString = '';\n            for(let i=0;i<event.target.value.length; i++){\n                encryptedString+= '*';\n            }\n            updatedField.value = encryptedString;\n        } else {\n            updatedField.value = event.target.value;\n        }\n\n        updatedField.valid = validated(updatedField.value, updatedField.validationRules);\n        updatedField.touched = true;\n        updatedDataFields[inputIdentifier] = updatedField;\n\n        let formDataIsValid = true;\n        for(let inputIdentifier in updatedDataFields){\n            formDataIsValid = updatedDataFields[inputIdentifier].valid && formDataIsValid;\n        }\n        setFormData({dataFields: updatedDataFields, validDataEntered: formDataIsValid});\n    }\n\n    // handle Login button click\n    const loginButtonHandler = (event) => {\n        event.preventDefault();\n        if(formData.validDataEntered){\n            console.log('Valid data enetered. Authenticating user...')\n        }\n    }\n\n    // handler Register button click\n    const registerClickHandler = () => {\n        console.log('inside register component')\n        props.history.push('/register');\n    };\n\n    const dataFieldsArray = [];\n    for(let key in formData.dataFields){\n        dataFieldsArray.push({\n            id: key,\n            config: formData.dataFields[key]\n        });\n    }\n\n\n    let form =  ( \n        <form className=\"Form\" onSubmit = {(event) => loginButtonHandler(event)}>\n            {dataFieldsArray.map(formElement => {\n                return(\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        touched={formElement.config.touched}\n                        valueType={formElement.id}\n                        changed={(event) => inputChangeHandler(event, formElement.id)}\n                    />\n                )\n            })}\n            <Button>Login</Button>\n        </form>\n    )\n    \n    // return statement\n    return (\n        <>\n            <div className=\"Login\">\n                <p className=\"LoginText\">Login</p>\n                {form}\n                <div className=\"NotRegistered\">\n                    <p>Not Registered Yet?</p>\n                    <p \n                        className=\"RegisterText\"\n                        onClick={registerClickHandler}>Register</p>\n                </div>\n            </div>\n            <p className=\"Guest\" >Continue as guest</p>\n        </>\n    )\n}\n\nexport default Login;","/Users/prakash/Repositories/NearbyResturantApp/src/components/Input/Input.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Button/Button.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":47,"column":12,"nodeType":"63","messageId":"64","endLine":47,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":47,"column":27,"nodeType":"63","messageId":"64","endLine":47,"endColumn":43},{"ruleId":"61","severity":1,"message":"66","line":63,"column":11,"nodeType":"63","messageId":"64","endLine":63,"endColumn":23},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'authenticated' is assigned a value but never used.","Identifier","unusedVar","'setAuthenticated' is assigned a value but never used.","'loginHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]