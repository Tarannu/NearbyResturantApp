[{"/Users/prakash/Repositories/NearbyResturantApp/src/index.js":"1","/Users/prakash/Repositories/NearbyResturantApp/src/reportWebVitals.js":"2","/Users/prakash/Repositories/NearbyResturantApp/src/App.js":"3","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Home/Home.js":"4","/Users/prakash/Repositories/NearbyResturantApp/src/components/Nav/Nav.js":"5","/Users/prakash/Repositories/NearbyResturantApp/src/components/Footer/Footer.js":"6","/Users/prakash/Repositories/NearbyResturantApp/src/components/About/About.js":"7","/Users/prakash/Repositories/NearbyResturantApp/src/components/Register/Register.js":"8","/Users/prakash/Repositories/NearbyResturantApp/src/components/Login/Login.js":"9","/Users/prakash/Repositories/NearbyResturantApp/src/components/Input/Input.js":"10","/Users/prakash/Repositories/NearbyResturantApp/src/components/Button/Button.js":"11","/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato.js":"12","/Users/prakash/Repositories/NearbyResturantApp/src/components/Spinner/Spinner.js":"13","/Users/prakash/Repositories/NearbyResturantApp/src/components/SearchBar/SearchBar.js":"14","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Search/Search.js":"15","/Users/prakash/Repositories/NearbyResturantApp/src/components/Restaurant/Restaurant.js":"16","/Users/prakash/Repositories/NearbyResturantApp/src/components/ResDetails/ResDetails.js":"17","/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato_menu.js":"18","/Users/prakash/Repositories/NearbyResturantApp/src/components/MenuItem/MenuItem.js":"19","/Users/prakash/Repositories/NearbyResturantApp/src/components/Feedback/Feedback.js":"20","/Users/prakash/Repositories/NearbyResturantApp/src/api/firebase.js":"21","/Users/prakash/Repositories/NearbyResturantApp/src/context/auth-context.js":"22","/Users/prakash/Repositories/NearbyResturantApp/src/containers/RestaurantMenu/RestaurantMenu.js":"23","/Users/prakash/Repositories/NearbyResturantApp/src/components/Logout.js":"24"},{"size":607,"mtime":1611623643725,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611447511345,"results":"27","hashOfConfig":"26"},{"size":1291,"mtime":1612752201903,"results":"28","hashOfConfig":"26"},{"size":465,"mtime":1612155407589,"results":"29","hashOfConfig":"26"},{"size":500,"mtime":1611905445663,"results":"30","hashOfConfig":"26"},{"size":801,"mtime":1612744399664,"results":"31","hashOfConfig":"26"},{"size":391,"mtime":1612155407581,"results":"32","hashOfConfig":"26"},{"size":7580,"mtime":1612282267957,"results":"33","hashOfConfig":"26"},{"size":8663,"mtime":1612749960067,"results":"34","hashOfConfig":"26"},{"size":1972,"mtime":1612285337660,"results":"35","hashOfConfig":"26"},{"size":254,"mtime":1611722564239,"results":"36","hashOfConfig":"26"},{"size":219,"mtime":1612155407588,"results":"37","hashOfConfig":"26"},{"size":169,"mtime":1611895773563,"results":"38","hashOfConfig":"26"},{"size":900,"mtime":1612744590353,"results":"39","hashOfConfig":"26"},{"size":3437,"mtime":1612747870001,"results":"40","hashOfConfig":"26"},{"size":1644,"mtime":1612156184741,"results":"41","hashOfConfig":"26"},{"size":1516,"mtime":1612155407586,"results":"42","hashOfConfig":"26"},{"size":185,"mtime":1612160137262,"results":"43","hashOfConfig":"26"},{"size":481,"mtime":1612745791220,"results":"44","hashOfConfig":"26"},{"size":1257,"mtime":1612745300864,"results":"45","hashOfConfig":"26"},{"size":161,"mtime":1612282125798,"results":"46","hashOfConfig":"26"},{"size":398,"mtime":1612741564960,"results":"47","hashOfConfig":"26"},{"size":3164,"mtime":1612753172518,"results":"48","hashOfConfig":"26"},{"size":683,"mtime":1612752649607,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"wftz3s",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/prakash/Repositories/NearbyResturantApp/src/index.js",[],["102","103"],"/Users/prakash/Repositories/NearbyResturantApp/src/reportWebVitals.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/App.js",["104"],"/Users/prakash/Repositories/NearbyResturantApp/src/containers/Home/Home.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Nav/Nav.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Footer/Footer.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/About/About.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Register/Register.js",["105","106","107","108"],"import React, {useEffect, useState} from 'react';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport Spinner from '../Spinner/Spinner';\nimport firebase from '../../api/firebase';\nimport './Register.css';\n\nconst Register = (props) => {\n    const [formData, setFormData] = useState({\n        dataFields: {\n            firstName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your first name',\n                    label: 'First Name'\n                },\n                value: '',\n                validationRules: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            lastName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your last name',\n                    label: 'Last Name'\n                },\n                value: '',\n                validationRules: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Enter email',\n                    label: 'Email',\n                },\n                value: '',\n                validationRules:{\n                    required: true,\n                    validString: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Enter password',\n                    label: 'Password',\n                },\n                value: '',\n                secretValue: '',\n                validationRules: {\n                    required: true,\n                    minLength: 8,\n                },\n                valid: false,\n                touched: false,\n            },\n            confirmPassword: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Re-enter password',\n                    label: 'Confirm Password',\n                },\n                value: '',\n                secretValue: '',\n                validationRules: {\n                    required: true,\n                    mustMatch: true,\n                },\n                valid: false,\n                touched: false,\n            },\n        },\n        isFormValid: false,\n    });\n    const[validationError, setValidationError] = useState(''); \n    const [authenticated, setAuthenticated] = useState(false);\n    const [userAlreadyExists, setUserAlreadyExists] = useState(false);\n\n    // using useEffect hook to register users to the database\n\n    // validate the input\n    const validated = ( value, rules ) => {\n        let isValid = true;\n        if(rules && rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.validString){\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/;\n            isValid = re.test(String(value).toLowerCase());\n        }\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength;\n        }\n\n        if(rules.mustMatch){\n            isValid = value === formData.dataFields.password.value;\n        }\n        return isValid;\n    }\n\n    // handle signUp button\n    const signUpButtonHandler = async (event) => {\n        setValidationError('');\n        const user = {\n            username: formData.dataFields.email.value,\n            password: formData.dataFields.password.value,\n            firstName: formData.dataFields.firstName.value,\n            lastName: formData.dataFields.lastName.value,\n            email: formData.dataFields.email.value,\n        }\n\n        // either sign user up or generate error message\n        if(formData.isFormValid){\n            firebase.get(`/users.json`)\n                .then(response => {\n                    let alreadySignedUp = false;\n                    for(let key in response.data){\n                        if(response.data[key].username === user.username){\n                            alreadySignedUp = true;\n                        }\n                    }\n                    if(alreadySignedUp === false){\n                        firebase.post('/users.json', user)\n                        .then(response => {\n                            console.log(response);\n                        });\n                    } else{\n                        setUserAlreadyExists(true);\n                        setValidationError('User already exists. Cannot register.');\n                    }\n                })\n        } else{\n            setValidationError('Please, complete the form to sign up.');\n        }\n        event.preventDefault();\n    }\n\n    // handle input\n    const inputChangeHandler = (event, field) => {\n        const updatedDataFields = {...formData.dataFields};\n        const updatedField = {...updatedDataFields[field]};\n        updatedField.value = event.target.value;\n\n        // validate entered values\n        updatedField.valid = validated(updatedField.value, updatedField.validationRules);\n        updatedField.touched = true;\n        updatedDataFields[field] = updatedField;\n\n        let formDataIsValid = true;\n        for(let field in updatedDataFields){\n            formDataIsValid = updatedDataFields[field].valid && formDataIsValid;\n        }\n        setFormData({dataFields: updatedDataFields, isFormValid: formDataIsValid});\n    }\n\n    const redirectToLoginPage = () => {\n        props.history.goBack();\n    }\n\n\n    const dataFieldsArray = [];\n    for(let key in formData.dataFields){\n        dataFieldsArray.push({\n            id: key,\n            config: formData.dataFields[key],\n        });\n    }\n\n    let form = \n        <form onSubmit={(event)=>signUpButtonHandler(event)}>\n            {dataFieldsArray.map(formElement => {\n                return(\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        touched={formElement.config.touched}\n                        valueType={formElement.id.includes('Name') ? (formElement.id.substring(0, formElement.id.length-4) + ' ' +  formElement.id.substring(formElement.id.length-4).toLowerCase()) : formElement.id}\n                        changed={(event) => inputChangeHandler(event, formElement.id)}\n                    />\n                )\n            })}\n            <Button>Sign Up</Button>\n        </form>\n    return (\n        <div className=\"Register\">\n            <p className=\"RegisterTitle\">Register for more actions and easy checkouts</p>\n            <div className=\"RegisterPage\">\n                {form}\n                <p className=\"ValidationError\">{validationError}</p>\n                {userAlreadyExists ? <div><p>Want to log in?</p><Button clicked={redirectToLoginPage}>Login</Button></div>: null}\n             </div>\n        </div>\n        \n    )\n}\n\nexport default Register;","/Users/prakash/Repositories/NearbyResturantApp/src/components/Login/Login.js",["109","110","111"],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Input/Input.js",["112"],"import React from 'react';\nimport './Input.css';\n\nconst Input = (props) => {\n    let inputElement = null;\n    let validationError = null;\n    const inputClasses = ['InputElement'];\n\n    if(props.invalid && props.touched){\n        inputClasses.push('Invalid');\n        validationError = <p className=\"ValidationError\">Please enter a valid {props.valueType}</p>\n    }\n\n    if(props.valueType === 'confirmPassword' && props.invalid && props.touched){\n        validationError = <p className=\"ValidationError\">Password did not match</p>\n    }\n\n\n    switch(props.elementType){\n        case('input'):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n            />\n            break;\n        case('select'):\n            inputElement = (\n                <select \n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option =>{\n                        return(\n                            <option\n                                key = {option.value} \n                                value={option.value}>\n                                {option.displayValue}\n                            </option>\n                        )\n                    })}\n                </select>)\n            break;\n        case('textarea'):\n                inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n            />\n        default:\n    }\n\n    return(\n        <div className=\"Input\">\n            <label className=\"Label\">{props.elementConfig.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    )\n}\n\nexport default Input;","/Users/prakash/Repositories/NearbyResturantApp/src/components/Button/Button.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Spinner/Spinner.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/SearchBar/SearchBar.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/containers/Search/Search.js",["113"],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Restaurant/Restaurant.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/ResDetails/ResDetails.js",["114"],"import React,{useState,useEffect}  from 'react';\nimport './ResDetail.css';\nimport zomato from '../../api/zomato'\n\nconst ResDetails = ({match}) => {\n    const [results, setResults] = useState([]);\n    console.log(\"Inside ResDetails\");\n  const detailsFunc = async () => {\n    try {\n      //location key is extracted from this api\n      const res = await zomato.get(`/restaurant?res_id=${match.params.id}`);\n      const details = res.data;\n      console.log(\"Detail IS :  \", details);\n      if (details) {\n        setResults(details);\n      }\n      const menu = await zomato.get(`/dailymenu?res_id=${match.params.id}`);\n      const menuDetails = menu.data;\n      console.log(\"Menu IS :  \", menuDetails);\n      if (menuDetails) {\n        setResults(menuDetails);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    detailsFunc();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"res-div\">\n        <h2>{results.name}</h2>\n        <div className=\"res-details\">\n        <p>They serve cuisines {results.cuisines}</p>\n        <p >\n          Open Through {results.timings}\n        </p>\n        <p>Located at</p>\n        <p>Contact {results.phone_numbers} </p>\n        </div>\n      </div>\n\n      <div className=\"order-selection\">\n        <h2>Their daily menu is given for you to select for order</h2>\n        <ul>\n          <li>Cheese Burger</li>\n          <li>Ham Burger</li>\n        </ul>\n        <button>Place Order</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ResDetails;\n","/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato_menu.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/MenuItem/MenuItem.js",["115"],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Feedback/Feedback.js",["116"],"/Users/prakash/Repositories/NearbyResturantApp/src/api/firebase.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/context/auth-context.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/containers/RestaurantMenu/RestaurantMenu.js",["117"],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Logout.js",["118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":18},{"ruleId":"123","severity":1,"message":"127","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"128","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":15},{"ruleId":"123","severity":1,"message":"129","line":90,"column":12,"nodeType":"125","messageId":"126","endLine":90,"endColumn":25},{"ruleId":"123","severity":1,"message":"130","line":90,"column":27,"nodeType":"125","messageId":"126","endLine":90,"endColumn":43},{"ruleId":"123","severity":1,"message":"131","line":51,"column":12,"nodeType":"125","messageId":"126","endLine":51,"endColumn":16},{"ruleId":"123","severity":1,"message":"132","line":54,"column":11,"nodeType":"125","messageId":"126","endLine":54,"endColumn":24},{"ruleId":"123","severity":1,"message":"133","line":74,"column":17,"nodeType":"125","messageId":"126","endLine":74,"endColumn":27},{"ruleId":"134","severity":1,"message":"135","line":52,"column":9,"nodeType":"136","messageId":"137","endLine":52,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":38,"column":18,"nodeType":"140","messageId":"141","endLine":38,"endColumn":20},{"ruleId":"142","severity":1,"message":"143","line":29,"column":6,"nodeType":"144","endLine":29,"endColumn":8,"suggestions":"145"},{"ruleId":"123","severity":1,"message":"146","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"147","line":6,"column":12,"nodeType":"125","messageId":"126","endLine":6,"endColumn":20},{"ruleId":"123","severity":1,"message":"148","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":27},{"ruleId":"123","severity":1,"message":"149","line":13,"column":11,"nodeType":"125","messageId":"126","endLine":13,"endColumn":22},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'ResDetails' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Spinner' is defined but never used.","'authenticated' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","'user' is assigned a value but never used.","'getTotalGoals' is assigned a value but never used.","'totalGoals' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'detailsFunc'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'useState' is defined but never used.","'feedback' is assigned a value but never used.","'useContext' is defined but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [detailsFunc]",{"range":"155","text":"156"},[866,868],"[detailsFunc]"]