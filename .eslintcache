[{"/Users/prakash/Repositories/NearbyResturantApp/src/index.js":"1","/Users/prakash/Repositories/NearbyResturantApp/src/reportWebVitals.js":"2","/Users/prakash/Repositories/NearbyResturantApp/src/App.js":"3","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Home/Home.js":"4","/Users/prakash/Repositories/NearbyResturantApp/src/components/Nav/Nav.js":"5","/Users/prakash/Repositories/NearbyResturantApp/src/components/Footer/Footer.js":"6","/Users/prakash/Repositories/NearbyResturantApp/src/components/About/About.js":"7","/Users/prakash/Repositories/NearbyResturantApp/src/components/Register/Register.js":"8","/Users/prakash/Repositories/NearbyResturantApp/src/axios.js":"9","/Users/prakash/Repositories/NearbyResturantApp/src/components/Login/Login.js":"10","/Users/prakash/Repositories/NearbyResturantApp/src/components/Input/Input.js":"11","/Users/prakash/Repositories/NearbyResturantApp/src/components/Button/Button.js":"12","/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato.js":"13","/Users/prakash/Repositories/NearbyResturantApp/src/components/Spinner/Spinner.js":"14","/Users/prakash/Repositories/NearbyResturantApp/src/components/SearchBar/SearchBar.js":"15","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Search/Search.js":"16","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Search/Restaurants.js":"17","/Users/prakash/Repositories/NearbyResturantApp/src/components/Restaurant/Restaurant.js":"18","/Users/prakash/Repositories/NearbyResturantApp/src/components/ResDetails/ResDetails.js":"19"},{"size":607,"mtime":1611623643725,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1611447511345,"results":"22","hashOfConfig":"21"},{"size":961,"mtime":1611875808713,"results":"23","hashOfConfig":"21"},{"size":436,"mtime":1611876025438,"results":"24","hashOfConfig":"21"},{"size":500,"mtime":1611623643717,"results":"25","hashOfConfig":"21"},{"size":1410,"mtime":1611876025432,"results":"26","hashOfConfig":"21"},{"size":391,"mtime":1611623643713,"results":"27","hashOfConfig":"21"},{"size":7874,"mtime":1611876025434,"results":"28","hashOfConfig":"21"},{"size":161,"mtime":1611623643720,"results":"29","hashOfConfig":"21"},{"size":7993,"mtime":1611876025433,"results":"30","hashOfConfig":"21"},{"size":1721,"mtime":1611727900008,"results":"31","hashOfConfig":"21"},{"size":254,"mtime":1611722564239,"results":"32","hashOfConfig":"21"},{"size":219,"mtime":1611876025437,"results":"33","hashOfConfig":"21"},{"size":169,"mtime":1611720027928,"results":"34","hashOfConfig":"21"},{"size":848,"mtime":1611876025437,"results":"35","hashOfConfig":"21"},{"size":3119,"mtime":1611876025439,"results":"36","hashOfConfig":"21"},{"size":847,"mtime":1611771602519,"results":"37","hashOfConfig":"21"},{"size":2685,"mtime":1611876025436,"results":"38","hashOfConfig":"21"},{"size":1472,"mtime":1611876025435,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"wftz3s",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"/Users/prakash/Repositories/NearbyResturantApp/src/index.js",[],["83","84"],"/Users/prakash/Repositories/NearbyResturantApp/src/reportWebVitals.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/App.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/containers/Home/Home.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Nav/Nav.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Footer/Footer.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/About/About.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Register/Register.js",["85","86","87"],"import React, {useEffect, useState} from 'react';\nimport Input from '../../components/Input/Input';\nimport Button from '../Button/Button';\nimport Spinner from '../../components/Spinner/Spinner';\nimport axios from '../../axios';\nimport './Register.css';\n\nconst Register = (props) => {\n    const [formData, setFormData] = useState({\n        dataFields: {\n            firstName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your first name',\n                    label: 'First Name'\n                },\n                value: '',\n                validationRules: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            lastName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your last name',\n                    label: 'Last Name'\n                },\n                value: '',\n                validationRules: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Enter email',\n                    label: 'Email',\n                },\n                value: '',\n                validationRules:{\n                    required: true,\n                    validString: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Enter password',\n                    label: 'Password',\n                },\n                value: '',\n                secretValue: '',\n                validationRules: {\n                    required: true,\n                    minLength: 8,\n                },\n                valid: false,\n                touched: false,\n            },\n            confirmPassword: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Re-enter password',\n                    label: 'Confirm Password',\n                },\n                value: '',\n                secretValue: '',\n                validationRules: {\n                    required: true,\n                    mustMatch: true,\n                },\n                valid: false,\n                touched: false,\n            },\n        },\n        isFormValid: false,\n    });\n    const[validationError, setValidationError] = useState(''); \n    const [authenticated, setAuthenticated] = useState(false);\n    const [userAlreadyExists, setUserAlreadyExists] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    // using useEffect hook to register users to the database\n\n    // validate the input\n    const validated = ( value, rules ) => {\n        let isValid = true;\n        if(rules && rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.validString){\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/;\n            isValid = re.test(String(value).toLowerCase());\n        }\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength;\n        }\n\n        if(rules.mustMatch){\n            isValid = value === formData.dataFields.password.value;\n        }\n        return isValid;\n    }\n\n    // handle signUp button\n    const signUpButtonHandler = async (event) => {\n        setValidationError('');\n        const user = {\n            username: formData.dataFields.email.value,\n            password: formData.dataFields.password.value,\n            firstName: formData.dataFields.firstName.value,\n            lastName: formData.dataFields.lastName.value,\n            email: formData.dataFields.email.value,\n        }\n\n        // either sign user up or generate error message\n        if(formData.isFormValid){\n            setLoading(true);\n            axios.get(`/users.json`)\n                .then(response => {\n                    let alreadySignedUp = false;\n                    for(let key in response.data){\n                        if(response.data[key].username === user.username){\n                            alreadySignedUp = true;\n                        }\n                    }\n                    if(alreadySignedUp === false){\n                        axios.post('/users.json', user)\n                        .then(response => {\n                            props.history.push('/search-and-result');\n                        });\n                    } else{\n                        setUserAlreadyExists(true);\n                        setLoading(false);\n                        setValidationError('User already exists. Cannot register.');\n                    }\n                })\n        } else{\n            setValidationError('Please, complete the form to sign up.');\n        }\n        event.preventDefault();\n    }\n\n    // handle input\n    const inputChangeHandler = (event, field) => {\n        const updatedDataFields = {...formData.dataFields};\n        const updatedField = {...updatedDataFields[field]};\n        updatedField.value = event.target.value;\n\n        // validate entered values\n        updatedField.valid = validated(updatedField.value, updatedField.validationRules);\n        updatedField.touched = true;\n        updatedDataFields[field] = updatedField;\n\n        let formDataIsValid = true;\n        for(let field in updatedDataFields){\n            formDataIsValid = updatedDataFields[field].valid && formDataIsValid;\n        }\n        setFormData({dataFields: updatedDataFields, isFormValid: formDataIsValid});\n    }\n\n    const redirectToLoginPage = () => {\n        props.history.goBack();\n    }\n\n\n    const dataFieldsArray = [];\n    for(let key in formData.dataFields){\n        dataFieldsArray.push({\n            id: key,\n            config: formData.dataFields[key],\n        });\n    }\n\n    let form = \n        <form onSubmit={(event)=>signUpButtonHandler(event)}>\n            {dataFieldsArray.map(formElement => {\n                return(\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        touched={formElement.config.touched}\n                        valueType={formElement.id.includes('Name') ? (formElement.id.substring(0, formElement.id.length-4) + ' ' +  formElement.id.substring(formElement.id.length-4).toLowerCase()) : formElement.id}\n                        changed={(event) => inputChangeHandler(event, formElement.id)}\n                    />\n                )\n            })}\n            <Button>Sign Up</Button>\n        </form>\n    return (\n        <>\n            {loading ? <Spinner/> : (\n                <div className=\"Register\">\n                    <p className=\"RegisterTitle\">Register for more actions and easy checkouts</p>\n                    <div className=\"RegisterPage\">\n                        {form}\n                        <p className=\"ValidationError\">{validationError}</p>\n                        {userAlreadyExists ? <div><p>Want to log in?</p><Button clicked={redirectToLoginPage}>Login</Button></div>: null}\n                    </div>\n                </div>\n            )}\n        </>\n        \n    )\n}\n\nexport default Register;","/Users/prakash/Repositories/NearbyResturantApp/src/axios.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Login/Login.js",["88","89","90"],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Input/Input.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Button/Button.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/api/zomato.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Spinner/Spinner.js",[],["91","92"],"/Users/prakash/Repositories/NearbyResturantApp/src/components/SearchBar/SearchBar.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/containers/Search/Search.js",["93","94","95","96","97","98","99"],"import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"../../Components/SearchBar/SearchBar\";\nimport Restaurant from \"../../Components/Restaurant/Restaurant\";\nimport zomato from \"../../api/zomato\";\nimport Select from \"react-select\";\n\nconst Search = () => {\n  const [food, setFood] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const options = [{ label: \"Sort by review\", value: \"by review\" }];\n  const [sort, setSort] = useState(\"\");\n\n  const handleLocationChange = (e) => {\n    setLocation(e.target.value);\n  };\n  const handleFoodChange = (e) => {\n    setFood(e.target.value);\n  };\n  \n\n  const searchFunc = async (loc, fd, sort) => {\n    try {\n      //location key is extracted from this api\n      const city_response = await zomato.get(`/locations?query=${loc}`);\n      const city_id = JSON.stringify(\n        city_response.data.location_suggestions[0].entity_id\n      );\n\n      //sort logic will be here\n      var getURL = \"\";\n      if (sort.value === \"by review\") {\n        getURL = `/search?entity_id=${city_id}&entity_type=city&q=${fd}&sort=rating&order=desc`;\n      } else getURL = `/search?entity_id=${city_id}&entity_type=city&q=${fd}`;\n      //this api get the food type\n      const food_response = await zomato.get(getURL);\n      \n      const items = food_response.data.restaurants;\n      if (items.length) {\n        setResults(items);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  useEffect(() => {\n    searchFunc(location, food, sort);\n  }, [location, food,sort]);\n  \n  const handleSubmit = (e) => {\n    console.log(\"It will take max 15 minutes to load otherwise please refresh\");\n    e.preventDefault();\n    searchFunc(location, food,sort);\n  };\n  const handleSort = (value) => {\n    setSort(value);\n    console.log(sort);\n    searchFunc(food,location,sort);\n  };\n  let restaurants = null;\n  if(results.length > 0){\n    restaurants = results.map(restaurant => {\n      return (\n        <Restaurant\n          key={restaurant.restaurant.id}\n          restaurant={restaurant.restaurant}\n       />\n      )\n    });\n\n  }\n \n\n  return (\n    <div style={{ padding: 50 }}>\n      <SearchBar\n        location={location}\n        onLocationChange={handleLocationChange}\n        onFoodChange={handleFoodChange}\n        onTermSubmit={handleSubmit}\n      />\n      <div style={{ fontSize: 14 }}>\n        <Select options={options} onChange={handleSort} />\n      </div>\n       <Restaurant results={results} onSortChanged={handleSort}/>\n    </div>\n  );\n};\n\nexport default Search;","/Users/prakash/Repositories/NearbyResturantApp/src/containers/Search/Restaurants.js",["100","101"],"/Users/prakash/Repositories/NearbyResturantApp/src/components/Restaurant/Restaurant.js",[],"/Users/prakash/Repositories/NearbyResturantApp/src/components/ResDetails/ResDetails.js",["102"],"import React,{useState,useEffect}  from 'react';\nimport './ResDetail.css';\nimport zomato from '../../api/zomato'\n\nconst ResDetails = ({match}) => {\n    const [results, setResults] = useState([]);\n  \n  const detailsFunc = async () => {\n    try {\n      //location key is extracted from this api\n      const res = await zomato.get(`/restaurant?res_id=${match.params.id}`);\n      const details = res.data;\n      console.log(\"Detail IS :  \", details);\n      if (details) {\n        setResults(details);\n      }\n      const menu = await zomato.get(`/dailymenu?res_id=$16931323`);\n      const menuDetails = menu.data;\n      console.log(\"Menu IS :  \", menuDetails);\n      if (menuDetails) {\n        setResults(menuDetails);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    detailsFunc();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"res-div\">\n        <h2>{results.name}</h2>\n        <div className=\"res-details\">\n        <p>They serve cuisines {results.cuisines}</p>\n        <p >\n          Open Through {results.timings}\n        </p>\n        <p>Located at</p>\n        <p>Contact {results.phone_numbers} </p>\n        </div>\n      </div>\n\n      <div className=\"order-selection\">\n        <h2>Their daily menu is given for you to select for order</h2>\n        <ul>\n          <li>Cheese Burger</li>\n          <li>Ham Burger</li>\n        </ul>\n        <button>Place Order</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ResDetails\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":90,"column":12,"nodeType":"109","messageId":"110","endLine":90,"endColumn":25},{"ruleId":"107","severity":1,"message":"112","line":90,"column":27,"nodeType":"109","messageId":"110","endLine":90,"endColumn":43},{"ruleId":"107","severity":1,"message":"111","line":48,"column":12,"nodeType":"109","messageId":"110","endLine":48,"endColumn":25},{"ruleId":"107","severity":1,"message":"113","line":51,"column":11,"nodeType":"109","messageId":"110","endLine":51,"endColumn":24},{"ruleId":"107","severity":1,"message":"114","line":71,"column":17,"nodeType":"109","messageId":"110","endLine":71,"endColumn":27},{"ruleId":"103","replacedBy":"115"},{"ruleId":"105","replacedBy":"116"},{"ruleId":"107","severity":1,"message":"117","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"107","severity":1,"message":"118","line":21,"column":9,"nodeType":"109","messageId":"110","endLine":21,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":35,"column":18,"nodeType":"121","messageId":"122","endLine":35,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":52,"column":6,"nodeType":"125","endLine":52,"endColumn":30,"suggestions":"126"},{"ruleId":"107","severity":1,"message":"127","line":54,"column":9,"nodeType":"109","messageId":"110","endLine":54,"endColumn":21},{"ruleId":"107","severity":1,"message":"128","line":60,"column":9,"nodeType":"109","messageId":"110","endLine":60,"endColumn":21},{"ruleId":"107","severity":1,"message":"129","line":67,"column":5,"nodeType":"109","messageId":"110","endLine":67,"endColumn":16},{"ruleId":"107","severity":1,"message":"130","line":5,"column":7,"nodeType":"109","messageId":"110","endLine":5,"endColumn":18},{"ruleId":"131","severity":2,"message":"132","line":24,"column":16,"nodeType":"109","messageId":"133","endLine":24,"endColumn":26},{"ruleId":"123","severity":1,"message":"134","line":29,"column":6,"nodeType":"125","endLine":29,"endColumn":8,"suggestions":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'authenticated' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","'getTotalGoals' is assigned a value but never used.","'totalGoals' is assigned a value but never used.",["136"],["137"],"'Select' is defined but never used.","'handleSortChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchFunc'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'handleSubmit' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'restaurants' is assigned a value but never used.","'Restaurants' is assigned a value but never used.","no-undef","'Restaurant' is not defined.","undef","React Hook useEffect has a missing dependency: 'detailsFunc'. Either include it or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [location, food, sortBy, searchFunc]",{"range":"144","text":"145"},"Update the dependencies array to be: [detailsFunc]",{"range":"146","text":"147"},[1691,1715],"[location, food, sortBy, searchFunc]",[823,825],"[detailsFunc]"]